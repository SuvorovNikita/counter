{"version":3,"sources":["counter.tsx","settings.tsx","App.tsx","index.tsx"],"names":["Counter","props","count","incrementCount","resetCount","maxValue","start","disabledIncrementCount","disabledResetCount","colorCount","errorMess","error","style","textAlign","marginBottom","className","disabled","onClick","Settings","setMaxValue","setStart","setSettings","minError","maxError","onChange","e","currentTarget","value","type","App","useState","setCount","setError","changeMinValue","useEffect","Number","localStorage","getItem","setItem","toString","ReactDOM","render","document","getElementById"],"mappings":"0JAeO,SAASA,EAAQC,GAAmB,IAElCC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,eAAgBC,EAAsCH,EAAtCG,WAAYC,EAA0BJ,EAA1BI,SAAUC,EAAgBL,EAAhBK,MAE9CC,EAAyBL,IAAUG,GAAYH,EAAQ,GAAKI,EAAQD,GAAYC,EAAQ,GAAKD,EAAW,EACxGG,EAAqBN,IAAUI,GAASJ,GAAS,EACjDO,EAAaP,IAAUG,EAAW,QAAU,GAC5CK,EAL8DT,EAATU,MAKjC,QAAUT,EAGlC,OAAO,yBAAKU,MAAO,CAACC,UAAW,SAAUC,aAAc,QACnD,yBAAKC,UAAWN,GAAaC,GAC7B,4BAAQM,SAAUT,EAAwBU,QAASd,GAAnD,OACA,4BAAQa,SAAUR,EAAoBS,QAASb,GAA/C,UChBD,SAASc,EAASjB,GAAmB,IACnCkB,EAAuDlB,EAAvDkB,YAAaC,EAA0CnB,EAA1CmB,SAAUf,EAAgCJ,EAAhCI,SAAUC,EAAsBL,EAAtBK,MAAOe,EAAepB,EAAfoB,YAU7C,IAAIL,EAAWX,GAAY,GAAKC,EAAQ,GAAKA,IAAUD,EACnDiB,EAAWhB,EAAQ,EAAI,QAAU,GACjCiB,EAAWlB,EAAW,EAAI,QAAU,GAGxC,OAAO,yBAAKU,UAAU,mBAClB,4CACA,2BACIA,UAAWQ,EACXC,SAjBR,SAAwBC,GACpBN,GAAaM,EAAEC,cAAcC,QAiBzBC,KAAK,SACLD,MAAOtB,IAEX,8CACA,2BACIU,UAAWO,EACXK,MAAOrB,EACPkB,SArBR,SAAwBC,GACpBL,GAAUK,EAAEC,cAAcC,QAqBtBC,KAAK,WACT,4BAAQZ,SAAUA,EAAUC,QAASI,GAArC,QC0BOQ,MA9Df,WAAgB,IAAD,EAEeC,mBAAS,GAFxB,mBAEJ5B,EAFI,KAEG6B,EAFH,OAGqBD,mBAAS,GAH9B,mBAGJzB,EAHI,KAGMc,EAHN,OAIeW,mBAAS,GAJxB,mBAIJxB,EAJI,KAIGc,EAJH,OAKeU,oBAAS,GALxB,mBAKJnB,EALI,KAKGqB,EALH,KAoBX,SAASC,EAAeN,GAEhBK,EADAL,EAAQ,GAKZP,EAASO,GAeb,OALAO,qBAAU,WACNf,EAAYgB,OAAOC,aAAaC,QAAQ,cACxCjB,EAASe,OAAOC,aAAaC,QAAQ,aACtC,IAGC,yBAAKtB,UAAU,OACX,kBAACG,EAAD,CACIG,YAfZ,WACIU,EAAS1B,GACT0B,EAASzB,GACT8B,aAAaE,QAAQ,WAAajC,EAASkC,YAC3CH,aAAaE,QAAQ,QAAUhC,EAAMiC,aAY7BnB,SAAUa,EACVd,YAnCZ,SAAwBQ,GAEhBK,EADAL,EAAQ,GAKZR,EAAYQ,IA8BJtB,SAAUA,EACVC,MAAOA,IAEX,kBAACN,EAAD,CAASE,MAAOA,EACPS,MAAOA,EACPsB,eAAgBA,EAChB7B,WA5CE,kBAAM2B,EAASzB,IA6CjBH,eA9CM,kBAAM4B,EAAS7B,EAAQ,IA+C7BG,SAAUA,EACVC,MAAOA,MCzD5BkC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.66151566.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\ntype PropsType = {\r\n    count: number\r\n    incrementCount: () => void\r\n    resetCount: () => void\r\n    start: number\r\n    maxValue: number\r\n    changeMinValue: (value: number) => void\r\n    error: boolean;\r\n}\r\n\r\n\r\nexport function Counter(props: PropsType) {\r\n\r\n    let {count, incrementCount, resetCount, maxValue, start, error} = props;\r\n\r\n    let disabledIncrementCount = count === maxValue || count < 0 || start > maxValue || start < 0 || maxValue < 0;\r\n    let disabledResetCount = count === start || count <= 0;\r\n    let colorCount = count === maxValue ? 'color' : '';\r\n    let errorMess = error ? 'Error' : count;\r\n\r\n\r\n    return <div style={{textAlign: \"center\", marginBottom: '5px'}}>\r\n        <div className={colorCount}>{errorMess}</div>\r\n        <button disabled={disabledIncrementCount} onClick={incrementCount}>Inc</button>\r\n        <button disabled={disabledResetCount} onClick={resetCount}>Reset</button>\r\n    </div>\r\n}\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\n\r\n\r\ntype PropsType = {\r\n    maxValue: number\r\n    start: number\r\n    setMaxValue: (value: number) => void\r\n    setStart: (value: number) => void\r\n    setSettings: () => void\r\n\r\n}\r\n\r\nexport function Settings(props: PropsType) {\r\n    let {setMaxValue, setStart, maxValue, start, setSettings} = props;\r\n\r\n    function changeValueMax(e: ChangeEvent<HTMLInputElement>) {\r\n        setMaxValue(+e.currentTarget.value)\r\n    }\r\n\r\n    function changeValueMin(e: ChangeEvent<HTMLInputElement>) {\r\n        setStart(+e.currentTarget.value)\r\n    }\r\n\r\n    let disabled = maxValue <= 0 || start < 0 || start === maxValue\r\n    let minError = start < 0 ? 'error' : ''\r\n    let maxError = maxValue < 0 ? 'error' : ''\r\n\r\n\r\n    return <div className='wrapperSettings'>\r\n        <span> Max Value</span>\r\n        <input\r\n            className={maxError}\r\n            onChange={changeValueMax}\r\n            type=\"number\"\r\n            value={maxValue}\r\n        />\r\n        <span> Start Value</span>\r\n        <input\r\n            className={minError}\r\n            value={start}\r\n            onChange={changeValueMin}\r\n            type=\"number\"/>\r\n        <button disabled={disabled} onClick={setSettings}>Set</button>\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {Counter} from './counter';\r\nimport {Settings} from \"./settings\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const [count, setCount] = useState(0)\r\n    const [maxValue, setMaxValue] = useState(0)\r\n    const [start, setStart] = useState(0)\r\n    const [error, setError] = useState(false)\r\n\r\n\r\n    const incrementCount = () => setCount(count + 1);\r\n    const resetCount = () => setCount(start);\r\n\r\n    function changeMaxValue(value: number) {\r\n        if (value < 0) {\r\n            setError(true);\r\n        } else {\r\n            setError(false)\r\n        }\r\n        setMaxValue(value)\r\n    }\r\n\r\n    function changeMinValue(value: number) {\r\n        if (value < 0) {\r\n            setError(true);\r\n        } else {\r\n            setError(false)\r\n        }\r\n        setStart(value)\r\n    }\r\n\r\n    function setSettings() {\r\n        setCount(maxValue)\r\n        setCount(start)\r\n        localStorage.setItem('maxValue', (maxValue.toString()))\r\n        localStorage.setItem('start', (start.toString()))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMaxValue(Number(localStorage.getItem('maxValue')));\r\n        setStart(Number(localStorage.getItem('start')));\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Settings\r\n                setSettings={setSettings}\r\n                setStart={changeMinValue}\r\n                setMaxValue={changeMaxValue}\r\n                maxValue={maxValue}\r\n                start={start}\r\n            />\r\n            <Counter count={count}\r\n                     error={error}\r\n                     changeMinValue={changeMinValue}\r\n                     resetCount={resetCount}\r\n                     incrementCount={incrementCount}\r\n                     maxValue={maxValue}\r\n                     start={start}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}